     1 00000000                                 ;MyOS
     2 00000000                                 
     3 00000000                                 [INSTRSET "i486p"]
     4 00000000                                 
     5  = 00000105                              VBEMODE	EQU		0x105			; 1024 x  768 x 8bit彩色
     6 00000000                                 ; （画面模式号码）
     7 00000000                                 ;	0x100 :  640 x  400 x 8bit彩色
     8 00000000                                 ;	0x101 :  640 x  480 x 8bit彩色
     9 00000000                                 ;	0x103 :  800 x  600 x 8bit彩色
    10 00000000                                 ;	0x105 : 1024 x  768 x 8bit彩色
    11 00000000                                 ;	0x107 : 1280 x 1024 x 8bit彩色
    12 00000000                                 
    13 00000000                                 
    14  = 00280000                              BOTPAK	EQU		0x00280000		
    15  = 00100000                              DSKCAC	EQU		0x00100000		
    16  = 00008000                              DSKCAC0	EQU		0x00008000
    17 00000000                                 
    18 00000000                                 ;有关BOOT_INFO
    19  = 00000FF0                              CYLS	EQU		0x0ff0			;设定启动区
    20  = 00000FF1                              LEDS	EQU		0x0ff1
    21  = 00000FF2                              VMODE	EQU		0x0ff2			;关于颜色数目的信息，颜色的位置
    22  = 00000FF4                              SCRNX	EQU		0x0ff4			;屏幕分辨率的X(screen x)
    23  = 00000FF6                              SCRNY	EQU		0x0ff6			;屏幕分辨率的Y(screen y)
    24  = 00000FF8                              VRAM	EQU		0x0ff8			;图像缓冲区的开始位置
    25 00000000                                 
    26                                          		ORG		0xc200			; 程序被加载到内存的地址
    27 0000C200                                 		
    28 0000C200                                 ; 确认VBE是否存在
    29 0000C200                                 
    30 0000C200 B8 9000                         		MOV		AX,0x9000
    31 0000C203 8E C0                           		MOV		ES,AX
    32 0000C205 BF 0000                         		MOV		DI,0
    33 0000C208 B8 4F00                         		MOV		AX,0x4f00
    34 0000C20B CD 10                           		INT		0x10
    35 0000C20D 3D 004F                         		CMP		AX,0x004f
    36 0000C210 75 52                           		JNE		scrn320
    37 0000C212                                 
    38 0000C212                                 ; 检查VBE版本
    39 0000C212                                 
    40 0000C212 26 8B 45 04                     		MOV		AX,[ES:DI+4]
    41 0000C216 3D 0200                         		CMP		AX,0x0200
    42 0000C219 72 49                           		JB		scrn320			; if (AX < 0x0200) goto scrn320
    43 0000C21B                                 
    44 0000C21B                                 ; 取得画面模式信息
    45 0000C21B                                 
    46 0000C21B B9 0105                         		MOV		CX,VBEMODE
    47 0000C21E B8 4F01                         		MOV		AX,0x4f01
    48 0000C221 CD 10                           		INT		0x10
    49 0000C223 3D 004F                         		CMP		AX,0x004f
    50 0000C226 75 3C                           		JNE		scrn320
    51 0000C228                                 
    52 0000C228                                 ; 确认画面模式信息
    53 0000C228                                 
    54 0000C228 26 80 7D 19 08                  		CMP		BYTE [ES:DI+0x19],8
    55 0000C22D 75 35                           		JNE		scrn320
    56 0000C22F 26 80 7D 1B 04                  		CMP		BYTE [ES:DI+0x1b],4
    57 0000C234 75 2E                           		JNE		scrn320
    58 0000C236 26 8B 05                        		MOV		AX,[ES:DI+0x00]
    59 0000C239 25 0080                         		AND		AX,0x0080
    60 0000C23C 74 26                           		JZ		scrn320			; 模式属性的bit7是0，则放弃
    61 0000C23E                                 
    62 0000C23E                                 ; 画面模式切换
    63 0000C23E                                 
    64 0000C23E BB 4105                         		MOV		BX,VBEMODE+0x4000
    65 0000C241 B8 4F02                         		MOV		AX,0x4f02
    66 0000C244 CD 10                           		INT		0x10
    67 0000C246 C6 06 0FF2 08                   		MOV		BYTE [VMODE],8	; 记下画面模式（参考C语言）
    68 0000C24B 26 8B 45 12                     		MOV		AX,[ES:DI+0x12]
    69 0000C24F A3 0FF4                         		MOV		[SCRNX],AX
    70 0000C252 26 8B 45 14                     		MOV		AX,[ES:DI+0x14]
    71 0000C256 A3 0FF6                         		MOV		[SCRNY],AX
    72 0000C259 66 26 8B 45 28                  		MOV		EAX,[ES:DI+0x28]
    73 0000C25E 66 A3 0FF8                      		MOV		[VRAM],EAX
    74 0000C262 EB 20                           		JMP		keystatus
    75 0000C264                                 
    76 0000C264                                 scrn320:
    77 0000C264 B0 13                           		MOV		AL,0x13			; VGA显卡、320x200x8位彩色
    78 0000C266 B4 00                           		MOV		AH,0x00
    79 0000C268 CD 10                           		INT		0x10
    80 0000C26A C6 06 0FF2 08                   		MOV		BYTE[VMODE],8	;记录画面模式
    81 0000C26F C7 06 0FF4 0140                 		MOV		WORD[SCRNX],320
    82 0000C275 C7 06 0FF6 00C8                 		MOV		WORD[SCRNY],200
    83 0000C27B 66 C7 06 0FF8 000A0000          		MOV		DWORD[VRAM],0x000a0000
    84 0000C284                                 		
    85 0000C284                                 ;用BIOS取得键盘上各种LED指示灯的状态
    86 0000C284                                 keystatus:
    87 0000C284 B4 02                           		MOV 	AH,0x02
    88 0000C286 CD 16                           		INT		0x16			;键盘BIOS
    89 0000C288 A2 0FF1                         		MOV		[LEDS],AL
    90 0000C28B                                 		
    91 0000C28B                                 		
    92 0000C28B                                 ;PIC关闭一切中断
    93 0000C28B                                 ;	根据AT兼容机的规格，初始化PIC必须在CLT之前进行，否则有时会挂起
    94 0000C28B                                 ;	下面进行PIC的初始化		
    95 0000C28B                                 		
    96 0000C28B                                 		
    97 0000C28B                                 		
    98 0000C28B B0 FF                           		MOV		AL,0xff
    99 0000C28D E6 21                           		OUT		0x21,AL
   100 0000C28F 90                              		NOP						; 如果连续执行OUT指令，有些机种会无法正常运行
   101 0000C290 E6 A1                           		OUT		0xa1,AL
   102 0000C292                                 
   103 0000C292 FA                              		CLI						; 禁止CPU级别的中断
   104 0000C293                                 
   105 0000C293                                 ; 为让CPU可以访问1MB以上的内存空间，设定A20GATE
   106 0000C293                                 
   107 0000C293 E8 00B5                         		CALL	waitkbdout
   108 0000C296 B0 D1                           		MOV		AL,0xd1
   109 0000C298 E6 64                           		OUT		0x64,AL
   110 0000C29A E8 00AE                         		CALL	waitkbdout
   111 0000C29D B0 DF                           		MOV		AL,0xdf			; 使能 A20
   112 0000C29F E6 60                           		OUT		0x60,AL
   113 0000C2A1 E8 00A7                         		CALL	waitkbdout
   114 0000C2A4                                 
   115 0000C2A4                                 ; 切换到保护模式
   116 0000C2A4                                 
   117 0000C2A4                                 [INSTRSET "i486p"]				; 使用486指令
   118 0000C2A4                                 
   119 0000C2A4 0F 01 16 C38A                   		LGDT	[GDTR0]			; 设定临时GDT
   120 0000C2A9 0F 20 C0                        		MOV		EAX,CR0
   121 0000C2AC 66 25 7FFFFFFF                  		AND		EAX,0x7fffffff	; 设bit31为0（禁止颁）
   122 0000C2B2 66 83 C8 01                     		OR		EAX,0x00000001	; 设bit0为1（切换到保护模式）
   123 0000C2B6 0F 22 C0                        		MOV		CR0,EAX
   124 0000C2B9 EB 00                           		JMP		pipelineflush
   125 0000C2BB                                 pipelineflush:
   126 0000C2BB B8 0008                         		MOV		AX,1*8			;  可读写的段32bit
   127 0000C2BE 8E D8                           		MOV		DS,AX
   128 0000C2C0 8E C0                           		MOV		ES,AX
   129 0000C2C2 8E E0                           		MOV		FS,AX
   130 0000C2C4 8E E8                           		MOV		GS,AX
   131 0000C2C6 8E D0                           		MOV		SS,AX
   132 0000C2C8                                 
   133 0000C2C8                                 ; bootpackの転送
   134 0000C2C8                                 
   135 0000C2C8 66 BE 0000C390                  		MOV		ESI,bootpack	; 转送源
   136 0000C2CE 66 BF 00280000                  		MOV		EDI,BOTPAK		; 转送目的地
   137 0000C2D4 66 B9 00020000                  		MOV		ECX,512*1024/4
   138 0000C2DA E8 0077                         		CALL	memcpy
   139 0000C2DD                                 
   140 0000C2DD                                 ; 磁盘数据最终转送到它本来的位置去
   141 0000C2DD                                 
   142 0000C2DD                                 ; 首先从启动扇区开始
   143 0000C2DD                                 
   144 0000C2DD 66 BE 00007C00                  		MOV		ESI,0x7c00		; 转送源
   145 0000C2E3 66 BF 00100000                  		MOV		EDI,DSKCAC		; 转送目的地
   146 0000C2E9 66 B9 00000080                  		MOV		ECX,512/4
   147 0000C2EF E8 0062                         		CALL	memcpy
   148 0000C2F2                                 
   149 0000C2F2                                 ; 剩下的
   150 0000C2F2                                 
   151 0000C2F2 66 BE 00008200                  		MOV		ESI,DSKCAC0+512	; 转送源
   152 0000C2F8 66 BF 00100200                  		MOV		EDI,DSKCAC+512	; 转送目的地
   153 0000C2FE 66 B9 00000000                  		MOV		ECX,0
   154 0000C304 8A 0E 0FF0                      		MOV		CL,BYTE [CYLS]
   155 0000C308 66 69 C9 00001200               		IMUL	ECX,512*18*2/4	; 从柱面数变换为字节数/4
   156 0000C30F 66 81 E9 00000080               		SUB		ECX,512/4		; 减去IPL
   157 0000C316 E8 003B                         		CALL	memcpy
   158 0000C319                                 
   159 0000C319                                 ; myOS工作完成，剩下由bootpack完成
   160 0000C319                                 
   161 0000C319                                 ; bootpack启动
   162 0000C319                                 
   163 0000C319 66 BB 00280000                  		MOV		EBX,BOTPAK
   164 0000C31F 67 66 8B 4B 10                  		MOV		ECX,[EBX+16]
   165 0000C324 66 83 C1 03                     		ADD		ECX,3			; ECX += 3;
   166 0000C328 66 C1 E9 02                     		SHR		ECX,2			; ECX /= 4;
   167 0000C32C 74 10                           		JZ		skip			; 没有转送的东西时
   168 0000C32E 67 66 8B 73 14                  		MOV		ESI,[EBX+20]	; 转送源
   169 0000C333 66 01 DE                        		ADD		ESI,EBX
   170 0000C336 67 66 8B 7B 0C                  		MOV		EDI,[EBX+12]	; 转送目的地
   171 0000C33B E8 0016                         		CALL	memcpy
   172 0000C33E                                 skip:
   173 0000C33E 67 66 8B 63 0C                  		MOV		ESP,[EBX+12]	; 找初始值
   174 0000C343 66 EA 0000001B 0010             		JMP		DWORD 2*8:0x0000001b
   175 0000C34B                                 
   176 0000C34B                                 waitkbdout:
   177 0000C34B E4 64                           		IN		 AL,0x64
   178 0000C34D 24 02                           		AND		 AL,0x02
   179 0000C34F E4 60                           		IN		 AL,0x60
   180 0000C351 75 F8                           		JNZ		waitkbdout		; AND的结果不是0，则跳转到waitkbdout
   181 0000C353 C3                              		RET
   182 0000C354                                 
   183 0000C354                                 memcpy:
   184 0000C354 67 66 8B 06                     		MOV		EAX,[ESI]
   185 0000C358 66 83 C6 04                     		ADD		ESI,4
   186 0000C35C 67 66 89 07                     		MOV		[EDI],EAX
   187 0000C360 66 83 C7 04                     		ADD		EDI,4
   188 0000C364 66 83 E9 01                     		SUB		ECX,1
   189 0000C368 75 EA                           		JNZ		memcpy			; 减法运算的结果若不是0，就跳转到memcpy
   190 0000C36A C3                              		RET
   191 0000C36B                                 
   192 0000C36B                                 
   193 0000C36B 00 00 00 00 00                  		ALIGNB	16
   194 0000C370                                 GDT0:
   195 0000C370 00 00 00 00 00 00 00 00         		RESB	8				; NULL selector
   196 0000C378 FFFF 0000 9200 00CF             		DW		0xffff,0x0000,0x9200,0x00cf	; 可读写的段 32bit
   197 0000C380 FFFF 0000 9A28 0047             		DW		0xffff,0x0000,0x9a28,0x0047	; 可执行的段（bootpack用）
   198 0000C388                                 
   199 0000C388 0000                            		DW		0
   200 0000C38A                                 GDTR0:
   201 0000C38A 0017                            		DW		8*3-1
   202 0000C38C 0000C370                        		DD		GDT0
   203 0000C390                                 
   204 0000C390                                 		ALIGNB	16
   205 0000C390                                 bootpack: